name: Playground Api Release Pipeline

on:
  push:
    branches: [ main ]

env:
  CARGO_TERM_COLOR: always

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v3
    - name: Build
      run: cargo build --verbose
  clippy:
    runs-on: ubuntu-latest
    needs: build
    steps:
      - uses: actions/checkout@v3
      - run: rustup component add clippy
      - name: Lint
        run: cargo clippy -- -D warnings
  fmt:
    runs-on: ubuntu-latest
    needs: clippy
    steps:
      - uses: actions/checkout@v3
      - name: Format
        run: cargo fmt -- --check
  audit:
    runs-on: ubuntu-latest
    needs: fmt
    steps:
      - uses: actions/checkout@v3
      - name: Install Cargo Audit
        uses: baptiste0928/cargo-install@v2
        with:
          crate: cargo-audit
      - name: Security Audit
        run: cargo audit -d /tmp/tmp-advisory-db --ignore RUSTSEC-2020-0071
  test:
    runs-on: ubuntu-latest
    needs: audit
    steps:
    - uses: actions/checkout@v3
    - name: Test
      run: cargo test --verbose
  coverage:
    runs-on: ubuntu-latest
    needs: test
    container:
      image: xd009642/tarpaulin:develop-nightly
      options: --security-opt seccomp=unconfined
    steps:
      - uses: actions/checkout@v3
      - name: Generate code coverage
        run: |
          cargo +nightly tarpaulin --verbose --all-features --workspace --timeout 120 --out Xml
      - name: Upload to codecov.io
        uses: codecov/codecov-action@v3
        with:
          fail_ci_if_error: true
  package:
    needs: coverage
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v3
    - name: Install Zig
      run: sudo snap install zig --classic --beta
    - name: Install Cargo Lambda
      uses: baptiste0928/cargo-install@v2
      with:
        crate: cargo-lambda
    - name: Build Release
      run: cargo lambda build --release --x86-64
    - uses: actions/upload-artifact@v3
      with:
        name: bootstrap
        path: target/lambda/playground-api/bootstrap
  beta-deploy:
    concurrency: beta-deploy
    environment: aws
    runs-on: ubuntu-latest
    needs: package
    steps:
    - uses: actions/checkout@v3
    - uses: actions/setup-node@v2
    - uses: actions/download-artifact@v3
      with:
        name: bootstrap
        path: target/lambda/playground-api/
    - run: npm install cdk --global
    - run: npm --prefix dev/cdk install
    - run: npm --prefix dev/cdk run build
    - name: Deploy stack
      run: cdk deploy beta-playground-api-stack --app "node dev/cdk/dist/index" --require-approval never
      env:
        AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
        AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        AWS_REGION: us-west-2
        PLAYGROUND_AWS_ACCOUNT_ID: ${{ secrets.PLAYGROUND_AWS_ACCOUNT_ID }}
  integration-test:
    concurrency: beta-deploy
    environment: aws
    runs-on: ubuntu-latest
    needs: beta-deploy
    steps:
    - uses: actions/checkout@v3
    - name: Test
      run: cargo test --verbose -F integration
      env:
        AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
        AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        AWS_DEFAULT_REGION: ${{ secrets.AWS_INTEG_TEST_REGION }}
        PLAYGROUND_AWS_ACCOUNT_ID: ${{ secrets.PLAYGROUND_AWS_ACCOUNT_ID }}
        RUNNING_ENV: beta
  prod-deploy:
    concurrency: prod-deploy
    environment: aws
    runs-on: ubuntu-latest
    needs: integration-test
    steps:
    - uses: actions/checkout@v3
    - uses: actions/setup-node@v2
    - uses: actions/download-artifact@v3
      with:
        name: bootstrap
        path: target/lambda/playground-api/
    - run: npm install cdk --global
    - run: npm --prefix dev/cdk install
    - run: npm --prefix dev/cdk run build
    - name: Deploy stack
      run: cdk deploy prod-playground-api-stack --app "node dev/cdk/dist/index" --require-approval never
      env:
        AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
        AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        AWS_REGION: us-east-1
        PLAYGROUND_AWS_ACCOUNT_ID: ${{ secrets.PLAYGROUND_AWS_ACCOUNT_ID }}